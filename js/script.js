// ===== YOUTUBE API SETUP =====
let youtubePlayer;
let isYoutubeMuted = true;
let isYouTubeAPIReady = false;

// Load YouTube API
function loadYouTubeAPI() {
    // Ki·ªÉm tra n·∫øu API ƒë√£ ƒë∆∞·ª£c load
    if (window.YT && window.YT.Player) {
        onYouTubeIframeAPIReady();
        return;
    }

    const tag = document.createElement('script');
    tag.src = 'https://www.youtube.com/iframe_api';
    const firstScriptTag = document.getElementsByTagName('script')[0];
    firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

    // Fallback n·∫øu API kh√¥ng load ƒë∆∞·ª£c sau 10 gi√¢y
    setTimeout(() => {
        if (!isYouTubeAPIReady) {
            console.error('‚ùå YouTube API kh√¥ng load ƒë∆∞·ª£c, s·ª≠ d·ª•ng fallback');
            const videoSlide = document.querySelector('.video-slide');
            if (videoSlide) {
                videoSlide.style.background = 'linear-gradient(135deg, #007bff 0%, #0056b3 100%)';
            }
        }
    }, 10000);
}

// YouTube API ready callback
window.onYouTubeIframeAPIReady = function () {
    isYouTubeAPIReady = true;
    console.log('‚úÖ YouTube API ƒë√£ s·∫µn s√†ng');

    youtubePlayer = new YT.Player('youtube-player', {
        height: '100%',
        width: '100%',
        videoId: 'SJws76hIqxw',
        playerVars: {
            autoplay: 1,        // T·ª± ƒë·ªông ph√°t
            mute: 1,           // T·∫Øt √¢m m·∫∑c ƒë·ªãnh
            loop: 1,           // Ph√°t l·∫∑p
            playlist: 'SJws76hIqxw', // C·∫ßn thi·∫øt cho loop
            controls: 0,       // ·∫®n ƒëi·ªÅu khi·ªÉn
            showinfo: 0,       // ·∫®n th√¥ng tin video
            modestbranding: 1, // ·∫®n logo YouTube
            iv_load_policy: 3, // ·∫®n annotations
            cc_load_policy: 0, // ·∫®n ph·ª• ƒë·ªÅ
            playsinline: 1,    // Ph√°t inline tr√™n mobile
            disablekb: 1,      // T·∫Øt keyboard controls
            fs: 0,             // T·∫Øt fullscreen
            rel: 0,            // Kh√¥ng hi·ªán video li√™n quan
            enablejsapi: 1,    // B·∫≠t JavaScript API
            origin: window.location.origin,
            wmode: 'opaque'    // ƒê·∫£m b·∫£o video hi·ªÉn th·ªã ƒë√∫ng
        },
        events: {
            onReady: function (event) {
                console.log('üé¨ YouTube player ƒë√£ s·∫µn s√†ng');
                try {
                    event.target.setPlaybackQuality('hd1080');
                    event.target.playVideo();
                    console.log('‚ñ∂Ô∏è B·∫Øt ƒë·∫ßu ph√°t video');
                } catch (error) {
                    console.error('‚ùå L·ªói khi ph√°t video:', error);
                }
            },
            onStateChange: function (event) {
                console.log('üîÑ Tr·∫°ng th√°i video thay ƒë·ªïi:', event.data);
                // ƒê·∫£m b·∫£o video lu√¥n ph√°t l·∫∑p
                if (event.data === YT.PlayerState.ENDED) {
                    event.target.playVideo();
                    console.log('üîÑ Video k·∫øt th√∫c, ph√°t l·∫°i');
                }
            },
            onError: function (event) {
                console.error('‚ùå L·ªói YouTube player:', event.data);
                let errorMessage = '';
                switch (event.data) {
                    case 2:
                        errorMessage = 'Video ID kh√¥ng h·ª£p l·ªá';
                        break;
                    case 5:
                        errorMessage = 'Video kh√¥ng th·ªÉ ph√°t tr√™n HTML5 player';
                        break;
                    case 100:
                        errorMessage = 'Video kh√¥ng t√¨m th·∫•y ho·∫∑c b·ªã x√≥a';
                        break;
                    case 101:
                    case 150:
                        errorMessage = 'Video kh√¥ng cho ph√©p nh√∫ng';
                        break;
                    default:
                        errorMessage = 'L·ªói kh√¥ng x√°c ƒë·ªãnh';
                }
                console.error('Chi ti·∫øt l·ªói:', errorMessage);

                // Fallback: s·ª≠ d·ª•ng background gradient
                const videoSlide = document.querySelector('.video-slide');
                if (videoSlide) {
                    videoSlide.style.background = 'linear-gradient(135deg, #007bff 0%, #0056b3 100%)';
                    // ·∫®n n√∫t sound toggle n·∫øu video l·ªói
                    const soundToggle = document.getElementById('soundToggle');
                    if (soundToggle) {
                        soundToggle.style.display = 'none';
                    }
                }
            }
        }
    });
};

// Kh·ªüi t·∫°o th∆∞ vi·ªán AOS (Animate On Scroll)
document.addEventListener('DOMContentLoaded', function () {
    // Load YouTube API
    loadYouTubeAPI();

    AOS.init({
        duration: 1000, // th·ªùi gian ch·∫°y hi·ªáu ·ª©ng (t·ª´ 0 ƒë·∫øn 3000ms, b∆∞·ªõc nh·∫£y 50ms)
        easing: 'ease-in-out', // ki·ªÉu chuy·ªÉn ƒë·ªông m·∫∑c ƒë·ªãnh cho c√°c hi·ªáu ·ª©ng AOS
        once: true, // hi·ªáu ·ª©ng ch·ªâ ch·∫°y 1 l·∫ßn khi cu·ªôn xu·ªëng (kh√¥ng l·∫∑p l·∫°i khi cu·ªôn l·∫°i l√™n)
        mirror: false, // kh√¥ng ch·∫°y hi·ªáu ·ª©ng khi cu·ªôn ng∆∞·ª£c l√™n (t·∫Øt hi·ªáu ·ª©ng ng∆∞·ª£c)
        anchorPlacement: 'top-bottom', // x√°c ƒë·ªãnh v·ªã tr√≠ c·ªßa ph·∫ßn t·ª≠ s·∫Ω k√≠ch ho·∫°t hi·ªáu ·ª©ng
    });

    // ===== KH·ªûI T·∫†O SWIPER CHO HERO SLIDESHOW =====
    const heroSwiper = new Swiper('.hero-swiper', {
        // C·∫•u h√¨nh c∆° b·∫£n
        loop: true, // L·∫∑p v√¥ h·∫°n c√°c slide
        autoplay: false, // T·∫Øt autoplay ban ƒë·∫ßu (s·∫Ω b·∫≠t khi c·∫ßn)
        effect: 'fade', // Hi·ªáu ·ª©ng chuy·ªÉn slide fade
        fadeEffect: {
            crossFade: true // Hi·ªáu ·ª©ng fade m∆∞·ª£t m√†
        },
        speed: 1000, // T·ªëc ƒë·ªô chuy·ªÉn slide (1 gi√¢y)

        // Pagination (ch·∫•m tr√≤n ƒëi·ªÅu h∆∞·ªõng)
        pagination: {
            el: '.swiper-pagination',
            clickable: true, // Cho ph√©p click v√†o ch·∫•m ƒë·ªÉ chuy·ªÉn slide
            dynamicBullets: false, // Kh√¥ng s·ª≠ d·ª•ng dynamic bullets
        },

        // H·ªó tr·ª£ chu·ªôt v√† touch
        grabCursor: true, // Hi·ªÉn th·ªã con tr·ªè grab khi hover
        touchRatio: 1, // ƒê·ªô nh·∫°y c·ªßa touch
        touchAngle: 45, // G√≥c touch ƒë·ªÉ k√≠ch ho·∫°t swipe

        // Keyboard navigation
        keyboard: {
            enabled: true, // Cho ph√©p ƒëi·ªÅu khi·ªÉn b·∫±ng b√†n ph√≠m
            onlyInViewport: true, // Ch·ªâ ho·∫°t ƒë·ªông khi slider trong viewport
        },

        // Responsive breakpoints
        breakpoints: {
            320: {
                touchRatio: 1.5, // TƒÉng ƒë·ªô nh·∫°y touch tr√™n mobile
            },
            768: {
                touchRatio: 1,
            }
        },

        // Events
        on: {
            slideChange: function () {
                const activeSlide = this.slides[this.activeIndex];
                const soundToggle = document.getElementById('soundToggle');

                // Ki·ªÉm tra lo·∫°i slide hi·ªán t·∫°i
                if (activeSlide && activeSlide.classList.contains('video-slide')) {
                    // ===== SLIDE VIDEO =====
                    soundToggle.style.display = 'flex';

                    // ‚ùå D·ª™NG AUTOPLAY khi ·ªü slide video
                    if (this.autoplay.running) {
                        this.autoplay.stop();
                        console.log('üé• ƒêang ·ªü slide video - D·ª´ng autoplay');
                    }

                    // ƒê·∫£m b·∫£o YouTube video ƒëang ph√°t
                    if (youtubePlayer && typeof youtubePlayer.getPlayerState === 'function') {
                        try {
                            const state = youtubePlayer.getPlayerState();
                            if (state !== YT.PlayerState.PLAYING) {
                                youtubePlayer.playVideo();
                            }
                        } catch (error) {
                            console.error('‚ùå L·ªói khi ki·ªÉm tra tr·∫°ng th√°i video:', error);
                        }
                    }
                } else {
                    // ===== SLIDE H√åNH ·∫¢NH =====
                    soundToggle.style.display = 'none';

                    // T·∫°m d·ª´ng YouTube video khi kh√¥ng ·ªü slide video
                    if (youtubePlayer && typeof youtubePlayer.pauseVideo === 'function') {
                        try {
                            youtubePlayer.pauseVideo();
                        } catch (error) {
                            console.error('‚ùå L·ªói khi t·∫°m d·ª´ng video:', error);
                        }
                    }

                    // ‚úÖ B·∫¨T AUTOPLAY khi ·ªü slide h√¨nh ·∫£nh
                    if (!this.autoplay.running) {
                        // C·∫•u h√¨nh autoplay cho slide h√¨nh ·∫£nh
                        this.autoplay.delay = 5000; // 5 gi√¢y cho m·ªói slide ·∫£nh
                        this.autoplay.start();
                        console.log('üñºÔ∏è ƒêang ·ªü slide h√¨nh ·∫£nh - B·∫≠t autoplay');
                    }
                }

                // L√†m m·ªõi hi·ªáu ·ª©ng AOS cho slide m·ªõi
                AOS.refresh();
            },

            // X·ª≠ l√Ω khi slider ƒë∆∞·ª£c kh·ªüi t·∫°o
            init: function () {
                const firstSlide = this.slides[this.activeIndex];
                const soundToggle = document.getElementById('soundToggle');

                // Ki·ªÉm tra slide ƒë·∫ßu ti√™n
                if (firstSlide && firstSlide.classList.contains('video-slide')) {
                    soundToggle.style.display = 'flex';
                    console.log('üé¨ Kh·ªüi t·∫°o v·ªõi slide video - Autoplay t·∫Øt');
                } else {
                    soundToggle.style.display = 'none';
                    // N·∫øu slide ƒë·∫ßu kh√¥ng ph·∫£i video, b·∫≠t autoplay
                    this.autoplay.delay = 5000;
                    this.autoplay.start();
                    console.log('üñºÔ∏è Kh·ªüi t·∫°o v·ªõi slide h√¨nh ·∫£nh - Autoplay b·∫≠t');
                }
            }
        }
    });

    // ===== X·ª¨ L√ù HEADER TRONG SU·ªêT =====
    const header = document.getElementById('mainHeader');
    const heroSection = document.getElementById('hero');

    // T·∫°o Intersection Observer ƒë·ªÉ theo d√µi Hero Section
    const heroObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                // Khi Hero Section hi·ªÉn th·ªã - header trong su·ªët
                header.classList.remove('scrolled');
            } else {
                // Khi cu·ªôn qua Hero Section - header c√≥ n·ªÅn tr·∫Øng
                header.classList.add('scrolled');
            }
        });
    }, {
        threshold: 0.1, // K√≠ch ho·∫°t khi 10% Hero Section c√≤n hi·ªÉn th·ªã
        rootMargin: '-50px 0px 0px 0px' // Offset ƒë·ªÉ header chuy·ªÉn ƒë·ªïi s·ªõm h∆°n m·ªôt ch√∫t
    });

    // B·∫Øt ƒë·∫ßu theo d√µi Hero Section
    heroObserver.observe(heroSection);

    // ===== CU·ªòN M∆Ø·ª¢T CHO NAVIGATION =====
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();

            const targetId = this.getAttribute('href'); // l·∫•y id m·ª•c ti√™u t·ª´ th·∫ª a
            const targetElement = document.querySelector(targetId); // ch·ªçn ph·∫ßn t·ª≠ c√≥ id t∆∞∆°ng ·ª©ng

            if (targetElement) {
                // T√≠nh to√°n v·ªã tr√≠ cu·ªôn (c√≥ b√π tr·ª´ chi·ªÅu cao c·ªßa header)
                const headerOffset = header.offsetHeight;
                const elementPosition = targetElement.getBoundingClientRect().top + window.pageYOffset;
                const offsetPosition = elementPosition - headerOffset - 20; // tr·ª´ th√™m 20px ƒë·ªÉ t·∫°o kho·∫£ng c√°ch

                window.scrollTo({
                    top: offsetPosition,
                    behavior: 'smooth' // cu·ªôn m∆∞·ª£t
                });

                // ƒê√≥ng menu mobile n·∫øu ƒëang m·ªü
                const mainNav = document.querySelector('.main-nav');
                const menuToggle = document.querySelector('.menu-toggle');
                if (mainNav.classList.contains('active')) {
                    mainNav.classList.remove('active');
                    menuToggle.classList.remove('active');
                }
            }
        });
    });

    // ===== X·ª¨ L√ù MENU MOBILE =====
    const menuToggle = document.querySelector('.menu-toggle');
    const mainNav = document.querySelector('.main-nav');

    menuToggle.addEventListener('click', () => {
        mainNav.classList.toggle('active');
        menuToggle.classList.toggle('active');
    });

    // T·ª± ƒë·ªông ƒë√≥ng menu mobile khi click ra ngo√†i
    document.addEventListener('click', (event) => {
        if (!mainNav.contains(event.target) && !menuToggle.contains(event.target) && mainNav.classList.contains('active')) {
            mainNav.classList.remove('active');
            menuToggle.classList.remove('active');
        }
    });

    // ===== X·ª¨ L√ù VIDEO V√Ä √ÇM THANH =====
    const soundToggle = document.getElementById('soundToggle');
    const soundIcon = soundToggle.querySelector('i');

    // X·ª≠ l√Ω n√∫t b·∫≠t/t·∫Øt √¢m thanh cho YouTube
    soundToggle.addEventListener('click', function () {
        if (!youtubePlayer || typeof youtubePlayer.isMuted !== 'function') {
            console.warn('‚ö†Ô∏è YouTube player ch∆∞a s·∫µn s√†ng');
            return;
        }

        try {
            if (isYoutubeMuted) {
                // B·∫≠t √¢m thanh YouTube
                youtubePlayer.unMute();
                youtubePlayer.setVolume(50);
                isYoutubeMuted = false;
                soundIcon.className = 'fas fa-volume-up';
                soundToggle.classList.add('unmuted');
                soundToggle.setAttribute('aria-label', 'T·∫Øt √¢m thanh');
                console.log('üîä ƒê√£ b·∫≠t √¢m thanh YouTube');
            } else {
                // T·∫Øt √¢m thanh YouTube
                youtubePlayer.mute();
                isYoutubeMuted = true;
                soundIcon.className = 'fas fa-volume-mute';
                soundToggle.classList.remove('unmuted');
                soundToggle.setAttribute('aria-label', 'B·∫≠t √¢m thanh');
                console.log('üîá ƒê√£ t·∫Øt √¢m thanh YouTube');
            }
        } catch (error) {
            console.error('‚ùå L·ªói khi thay ƒë·ªïi √¢m thanh:', error);
        }
    });

    // T·∫°m d·ª´ng YouTube video khi kh√¥ng trong viewport ƒë·ªÉ ti·∫øt ki·ªám bƒÉng th√¥ng
    const videoObserverOptions = {
        threshold: 0.5 // Video ph·∫£i hi·ªÉn th·ªã √≠t nh·∫•t 50% ƒë·ªÉ ti·∫øp t·ª•c ph√°t
    };

    const videoObserver = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (!youtubePlayer || typeof youtubePlayer.playVideo !== 'function') return;

            try {
                if (entry.isIntersecting) {
                    // YouTube video trong viewport - ti·∫øp t·ª•c ph√°t
                    const currentSlide = heroSwiper.slides[heroSwiper.activeIndex];
                    if (currentSlide && currentSlide.classList.contains('video-slide')) {
                        youtubePlayer.playVideo();
                        console.log('‚ñ∂Ô∏è YouTube video ti·∫øp t·ª•c ph√°t (trong viewport)');
                    }
                } else {
                    // YouTube video ngo√†i viewport - t·∫°m d·ª´ng
                    youtubePlayer.pauseVideo();
                    console.log('‚è∏Ô∏è YouTube video t·∫°m d·ª´ng (ngo√†i viewport)');
                }
            } catch (error) {
                console.error('‚ùå L·ªói khi ƒëi·ªÅu khi·ªÉn video:', error);
            }
        });
    }, videoObserverOptions);

    // B·∫Øt ƒë·∫ßu theo d√µi hero section
    videoObserver.observe(heroSection);

    // ===== X·ª¨ L√ù RESPONSIVE CHO SLIDESHOW =====
    // ƒêi·ªÅu ch·ªânh autoplay delay d·ª±a tr√™n k√≠ch th∆∞·ªõc m√†n h√¨nh
    function adjustSlideshowForDevice() {
        const isMobile = window.innerWidth <= 768;

        if (isMobile) {
            // Tr√™n mobile: tƒÉng th·ªùi gian autoplay ƒë·ªÉ ng∆∞·ªùi d√πng c√≥ th·ªÉ ƒë·ªçc n·ªôi dung
            heroSwiper.autoplay.delay = 7000;
        } else {
            // Tr√™n desktop: th·ªùi gian autoplay b√¨nh th∆∞·ªùng
            heroSwiper.autoplay.delay = 5000;
        }
    }

    // G·ªçi h√†m khi t·∫£i trang
    adjustSlideshowForDevice();

    // G·ªçi h√†m khi thay ƒë·ªïi k√≠ch th∆∞·ªõc m√†n h√¨nh
    window.addEventListener('resize', adjustSlideshowForDevice);

    // ===== ACCESSIBILITY IMPROVEMENTS =====
    // Th√™m keyboard navigation cho slideshow
    document.addEventListener('keydown', function (e) {
        // Ch·ªâ ho·∫°t ƒë·ªông khi slideshow ƒëang trong viewport
        const heroRect = heroSection.getBoundingClientRect();
        const isHeroVisible = heroRect.top < window.innerHeight && heroRect.bottom > 0;

        if (isHeroVisible) {
            switch (e.key) {
                case 'ArrowLeft':
                    e.preventDefault();
                    heroSwiper.slidePrev();
                    break;
                case 'ArrowRight':
                    e.preventDefault();
                    heroSwiper.slideNext();
                    break;
                case ' ': // Spacebar
                    e.preventDefault();
                    const currentSlide = heroSwiper.slides[heroSwiper.activeIndex];
                    // Ch·ªâ toggle autoplay n·∫øu ƒëang ·ªü slide h√¨nh ·∫£nh
                    if (currentSlide && !currentSlide.classList.contains('video-slide')) {
                        if (heroSwiper.autoplay.running) {
                            heroSwiper.autoplay.stop();
                        } else {
                            heroSwiper.autoplay.start();
                        }
                    }
                    break;
            }
        }
    });

    // ===== PERFORMANCE OPTIMIZATION =====
    // Lazy load images trong c√°c slide kh√¥ng active
    const slideImages = document.querySelectorAll('.hero-slide img');
    slideImages.forEach(img => {
        if (img.dataset.src) {
            img.src = img.dataset.src;
        }
    });

    console.log('üéâ Hero Slideshow v·ªõi Video v√† H√¨nh ·∫£nh ƒë√£ ƒë∆∞·ª£c kh·ªüi t·∫°o th√†nh c√¥ng!');
    console.log('üìã Quy t·∫Øc autoplay:');
    console.log('   üé• Slide video: KH√îNG t·ª± ƒë·ªông chuy·ªÉn');
    console.log('   üñºÔ∏è Slide h√¨nh ·∫£nh: T·ª∞ ƒê·ªòNG chuy·ªÉn sau 5-7 gi√¢y');

    // ===== COUNTER ANIMATION CHO STATISTICS =====
    function animateCounter(element, start, end, duration, suffix = '') {
        let startTimestamp = null;
        const step = (timestamp) => {
            if (!startTimestamp) startTimestamp = timestamp;
            const progress = Math.min((timestamp - startTimestamp) / duration, 1);

            // S·ª≠ d·ª•ng easing function ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng m∆∞·ª£t m√†
            const easeOutQuart = 1 - Math.pow(1 - progress, 4);
            const current = Math.floor(easeOutQuart * (end - start) + start);

            element.textContent = current.toLocaleString('vi-VN') + suffix;

            if (progress < 1) {
                window.requestAnimationFrame(step);
            } else {
                element.textContent = end.toLocaleString('vi-VN') + suffix;
            }
        };
        window.requestAnimationFrame(step);
    }

    // Kh·ªüi t·∫°o Intersection Observer cho Statistics
    const statsSection = document.querySelector('.community-stats');
    if (statsSection) {
        const statsObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    // L·∫•y t·∫•t c·∫£ c√°c s·ªë c·∫ßn animate
                    const statNumbers = entry.target.querySelectorAll('.stat-number');

                    statNumbers.forEach((statNumber, index) => {
                        const text = statNumber.textContent;
                        let targetNumber;
                        let suffix = '';

                        // X·ª≠ l√Ω c√°c lo·∫°i s·ªë kh√°c nhau
                        if (text.includes('%')) {
                            targetNumber = parseInt(text.replace('%', ''));
                            suffix = '%';
                        } else if (text.includes('+')) {
                            targetNumber = parseInt(text.replace(/[+,]/g, ''));
                            suffix = '+';
                        } else {
                            targetNumber = parseInt(text.replace(/[,]/g, ''));
                        }

                        // Delay kh√°c nhau cho m·ªói counter ƒë·ªÉ t·∫°o hi·ªáu ·ª©ng cascade
                        setTimeout(() => {
                            animateCounter(statNumber, 0, targetNumber, 2000, suffix);
                            // Th√™m class ƒë·ªÉ k√≠ch ho·∫°t hi·ªáu ·ª©ng underline
                            statNumber.closest('.stat-item').classList.add('animated');
                        }, index * 200);
                    });

                    // Ch·ªâ ch·∫°y animation m·ªôt l·∫ßn
                    statsObserver.unobserve(entry.target);
                }
            });
        }, {
            threshold: 0.5, // K√≠ch ho·∫°t khi 50% section hi·ªÉn th·ªã
            rootMargin: '0px 0px -100px 0px' // Offset ƒë·ªÉ animation k√≠ch ho·∫°t s·ªõm h∆°n
        });

        statsObserver.observe(statsSection);
    }
});